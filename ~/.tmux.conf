set -g status off
set -g default-terminal "screen-256color"
# set -g utf8
# set-window-option -g utf8 on
set -g history-limit 20000
setw -g mode-keys vi
setw -g aggressive-resize on

# explicitly disable mouse control
set -g mouse on
# set -g mouse-utf8 on
bind -n WheelUpPane copy-mode -e
#setw -g mode-mouse on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on

# set pane colors - hilight the active pane
set-window-option -g pane-border-style fg=colour235 #base02
set-window-option -g pane-active-border-style fg=colour240 #base01

# reload ~/.tmux.conf
unbind ^R
bind ^R source-file ~/.tmux.conf \; display "Reloaded!"

#  copy/paste/urlview : c/v/u
# bind c run "tmux save-buffer - | xsel -ib"
# bind v run "tmux set-buffer -- \"$(xsel -ob)\"; tmux paste-buffer"
bind c run "tmux save-buffer - | wl-copy"
bind v run "tmux set-buffer -- \"$(wl-paste)\"; tmux paste-buffer"
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

# Set the prefix to ^A.
#unbind C-b
#set -g prefix ^A
#bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x
#unbind ^X
#bind ^X lock-server
#unbind x
#bind x lock-server

# screen ^C
unbind ^C
bind ^C new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^?
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \
unbind '\'
bind '\' confirm-before "kill-server"

# kill K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split -v |
unbind |
bind | split-window

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window

# split -v
unbind ^V
bind ^V split-window -v

# split -h
unbind ^H
bind ^H split-window -h

# kill-pane
unbind ^X
bind ^X killp

# split verticaly using per
bind F1 split-window -v -p 10
bind F2 split-window -v -p 20
bind F3 split-window -v -p 30
bind F4 split-window -v -p 40
bind F5 split-window -v -p 50
bind F6 split-window -v -p 60
bind F7 split-window -v -p 70
bind F8 split-window -v -p 80
bind F9 split-window -v -p 90
# split horizontaly using per
bind M-F1 split-window -h -p 10
bind M-F2 split-window -h -p 20
bind M-F3 split-window -h -p 30
bind M-F4 split-window -h -p 40
bind M-F5 split-window -h -p 50
bind M-F6 split-window -h -p 60
bind M-F7 split-window -h -p 70
bind M-F8 split-window -h -p 80
bind M-F9 split-window -h -p 90

### To support nested tmux (from ssh session), F12 will disable keybinding interception
bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
  set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S
