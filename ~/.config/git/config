[user]
	name = Moez Bouhlel
	email = lejenome@tik.tn
	signingkey = "73659C9D"

[commit]
	gpgsign = true

[core]
	autocrlf = input
	editor = vim
	# Treat spaces before tabs and all kinds of trailing whitespace as an error
	# [default] trailing-space: looks for spaces at the end of a line
	# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space
	pager = diff-so-fancy | less --tabs=4 -RFX

[color]
	ui = true
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	grep = true

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = 11
	frag = magenta bold
	old = red bold
	new = green bold
	func = 146 bold
	commit = yellow bold
	whitespace = red reverse

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[format]
	pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset

#[apply]
#	whitespace = nowarn
	# Detect whitespace errors when applying a patch
#	whitespace = fix

[branch]
	autosetupmerge = true

[merge]
	log = true
	autoStash = true

[push]
	default = tracking

[advice]
	statusHints = false

[diff]
	mnemonicprefix = true
	algorithm = patience
	renames = copies
	tool = vimdiff

[help]
	autocorrect = 1

[rerere]
# Remember my merges
# http://gitfu.wordpress.com/2008/04/20/git-rerere-rereremember-what-you-did-last-time/
	enabled = true

[alias]
	a = add                           # add
	chunkyadd = add --patch           # stage commits chunk by chunk
	b = branch -v                     # branch (verbose)
	c = commit -m                     # commit with message
	ca = commit -am                   # commit all with message
	ci = commit                       # commit
	amend = commit --amend            # ammend your last commit
	ammend = commit --amend           # ammend your last commit
	co = checkout                     # checkout
	nb = checkout -b                  # create and switch to a new branch (mnemonic: "git new branch branchname...")
	cp = cherry-pick -x               # grab a change from a branch
	d = diff --patch-with-stat        # diff unstaged changes
	dc = diff --cached                # diff staged changes
	last = diff HEAD^                 # diff last committed change
	l = log --pretty=oneline -n 20 --graph --abbrev-commit
	ll = log --pretty=medium --graph
	changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
	short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
	simple = log --pretty=format:\" * %s\"
	shortnocolor = log --pretty=format:\"%h %cr %cn %s\"
	pl = pull                         # pull
	ps = push                         # push
	rc = rebase --continue            # continue rebase
	rs = rebase --skip                # skip rebase
	r = remote -v                     # show remotes (verbose)
	unstage = reset HEAD              # remove files from index (tracking)
	uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
	filelog = log -u                  # show changes to a file
	s = status                        # status
	contributors = shortlog --summary --numbered
	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v
	# Credit an author on the latest commit
	credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"
	# rebase local braches to upstream branches & create missing ones
	syncupstream = "!f() { git fetch upstream; for _b in $(git branch -a |awk 'BEGIN {FS=\"/\"} $2==\"upstream\" {print $3}'); do git checkout $_b && git rebase -s recursive -Xours upstream/$_b $@ || git nb $_b upstream/$_b; done; git checkout master;}; f $@"
	# Show the diff between the latest commit and the current state
	dl = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
	# Create a branch alias to an other
	ln = !"f() { git symbolic-ref refs/heads/$2 refs/heads/$1; }; f"

	caa = !"git add --all; git commit -am"

	# `git di $number` shows the diff between the state `$number` revisions ago and the current state
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

	# Pull in remote changes for the current repository and all its submodules
	p = !"git pull; git submodule foreach git pull origin master"

	# Switch to a branch, creating it if necessary
	go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

	# Amend the currently staged files to the latest commit
	amend = commit --amend --reuse-message=HEAD

	# Interactive rebase with the given number of latest commits
	reb = "!r() { git rebase -i HEAD~$1; }; r"

	# Find branches containing commit
	fb = "!f() { git branch -a --contains $1; }; f"

	# Find tags containing commit
	ft = "!f() { git describe --always --contains $1; }; f"

	# Find commits by source code
	fc = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f"

	# Find commits by commit message
	fm = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"

	# Remove branches that have already been merged with master
	# a.k.a. ‘delete merged’
	dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"


[url "https://github.com/"]
	InsteadOf = "git://github.com/"

[url "git@github.com:"]
	insteadOf = "gh:"
	insteadOf = "github:"
	pushInsteadOf = "git://github.com/"
	pushInsteadOf = "http://github.com/"
	pushInsteadOf = "https://github.com/"

[url "git@bitbucket.org:"]
	insteadOf = "bb:"
	pushInsteadOf = "bitbucket:"
	pushInsteadOf = "git://bitbucket.org/"
	pushInsteadOf = "https://lejenome@bitbucket.org/"

#[url "git://github.com/"]
#	insteadOf = "github:"

[url "git@gist.github.com:"]
	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"
	pushInsteadOf = "https://gist.github.com/"

#[url "git://gist.github.com/"]
#	insteadOf = "gist:"

[url "git@gitlab.ateme.net:"]
	insteadOf = https://gitlab.ateme.net/
	insteadOf = "ateme:"

[sendemail]
	smtpencryption =  tls
	smtpserver = smtp.googlemail.com
	smtpuser = bmoez.j@gmail.com
	smtpserverport = 587
	aliasfile = ~/.mail-aliases
	aliasfiletype = mutt

[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
[rebase]
	autoStash = true
[interactive]
	diffFilter = diff-so-fancy --patch
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
